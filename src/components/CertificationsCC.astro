---
import { certifications } from '../data/certifications';
import CertificationCard from './CertificationCard.astro';
import Badge from './ui/badge.astro';

const featuredCertifications = certifications.filter(cert => cert.featured);
const categories = [...new Set(certifications.map(cert => cert.category))];
const levels = [...new Set(certifications.map(cert => cert.level))];

// Estadísticas
const stats = {
  total: certifications.length,
  active: certifications.filter(cert => new Date(cert.expiryDate) > new Date()).length,
  expiringSoon: certifications.filter(cert => {
    const expiryDate = new Date(cert.expiryDate);
    const sixMonthsFromNow = new Date();
    sixMonthsFromNow.setMonth(sixMonthsFromNow.getMonth() + 6);
    return expiryDate <= sixMonthsFromNow && expiryDate > new Date();
  }).length,
  totalHours: certifications.reduce((sum, cert) => sum + cert.hours, 0)
};
---

<section class="certifications-portfolio">
  <!-- Hero Section -->
  <div class="hero-section">
    <div class="container">
      <div class="hero-content">
        <div class="profile-container">
          <img 
            src="/images/profile.jpg" 
            alt="Profile Photo" 
            class="profile-photo"
          />
          <h1 class="hero-title">
            Mi Portfolio de 
            <span class="text-gradient">Certificaciones</span>
          </h1>
        </div>
        <p class="hero-description">
          Certificaciones profesionales y logros académicos que respaldan mi experiencia técnica y compromiso con el aprendizaje continuo.
        </p>
        <p class="hero-tagline">
          Construyendo soluciones tecnológicas innovadoras a través de la especialización y la excelencia.
        </p>
        
        <!-- Estadísticas -->
        <div class="stats-grid">
          <div class="stat-card" data-aos="fade-up" data-aos-delay="100">
            <div class="stat-number" data-count={stats.total}>0</div>
            <div class="stat-label">Certificaciones</div>
          </div>
          <div class="stat-card" data-aos="fade-up" data-aos-delay="200">
            <div class="stat-number" data-count={stats.active}>0</div>
            <div class="stat-label">Activas</div>
          </div>
          <div class="stat-card" data-aos="fade-up" data-aos-delay="300">
            <div class="stat-number" data-count={stats.totalHours}>0</div>
            <div class="stat-label">Horas</div>
          </div>
          <div class="stat-card" data-aos="fade-up" data-aos-delay="400">
            <div class="stat-number" data-count={categories.length}>0</div>
            <div class="stat-label">Áreas</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Controles de filtrado -->
  <div class="controls-section">
    <div class="container">
      <div class="control-panel" data-aos="fade-up">
        <div class="search-container">
          <div class="search-box">
            <svg class="search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.35-4.35"></path>
            </svg>
            <input 
              type="text" 
              id="searchInput"
              placeholder="Buscar certificaciones, proveedores o habilidades..."
              class="search-input"
            />
          </div>
        </div>
        
        <div class="filters-container">
          <select id="categoryFilter" class="filter-select">
            <option value="all">Todas las categorías</option>
            {categories.map(category => (
              <option value={category}>{category}</option>
            ))}
          </select>
          
          <select id="levelFilter" class="filter-select">
            <option value="all">Todos los niveles</option>
            {levels.map(level => (
              <option value={level}>{level}</option>
            ))}
          </select>
          
          <select id="sortBy" class="filter-select">
            <option value="date">Más reciente</option>
            <option value="title">Por título</option>
            <option value="provider">Por proveedor</option>
            <option value="expiry">Por expiración</option>
          </select>
        </div>

        <div class="view-toggle">
          <button class="toggle-btn active" data-view="grid" title="Vista en grilla">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <rect x="3" y="3" width="7" height="7"></rect>
              <rect x="14" y="3" width="7" height="7"></rect>
              <rect x="14" y="14" width="7" height="7"></rect>
              <rect x="3" y="14" width="7" height="7"></rect>
            </svg>
          </button>
          <button class="toggle-btn" data-view="list" title="Vista en lista">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <line x1="8" y1="6" x2="21" y2="6"></line>
              <line x1="8" y1="12" x2="21" y2="12"></line>
              <line x1="8" y1="18" x2="21" y2="18"></line>
              <line x1="3" y1="6" x2="3.01" y2="6"></line>
              <line x1="3" y1="12" x2="3.01" y2="12"></line>
              <line x1="3" y1="18" x2="3.01" y2="18"></line>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Certificaciones Destacadas -->
  {featuredCertifications.length > 0 && (
    <div class="featured-section">
      <div class="container">
        <div class="section-header" data-aos="fade-up">
          <h2 class="section-title">
            <svg class="title-icon" viewBox="0 0 24 24" fill="currentColor">
              <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26"></polygon>
            </svg>
            Certificaciones Destacadas
          </h2>
          <p class="section-description">Las certificaciones más relevantes y recientes de mi carrera profesional</p>
        </div>
        
        <div class="certifications-grid featured-grid">
          {featuredCertifications.map((cert, index) => (
            <div data-aos="fade-up" data-aos-delay={index * 100}>
              <CertificationCard certification={cert} featured={true} />
            </div>
          ))}
        </div>
      </div>
    </div>
  )}

  <!-- Todas las Certificaciones -->
  <div class="all-certs-section">
    <div class="container">
      <div class="section-header" data-aos="fade-up">
        <h2 class="section-title">Todas las Certificaciones</h2>
        <p class="section-description">Historial completo de certificaciones y logros académicos</p>
      </div>
      
      <div id="certificationsContainer" class="certifications-grid">
        {certifications.map((cert, index) => (
          <div data-aos="fade-up" data-aos-delay={index * 50}>
            <CertificationCard certification={cert} />
          </div>
        ))}
      </div>
      
      <!-- Mensaje cuando no hay resultados -->
      <div id="noResults" class="no-results" style="display: none;">
        <div class="no-results-content">
          <svg class="no-results-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
          <h3>No se encontraron certificaciones</h3>
          <p>Intenta ajustar los filtros de búsqueda</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal de detalles -->
  <div id="certModal" class="modal-overlay">
    <div class="modal-content">
      <div class="modal-header">
        <h2 id="modalTitle" class="modal-title"></h2>
        <button id="closeModal" class="close-btn" aria-label="Cerrar modal">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      
      <div id="modalBody" class="modal-body">
        <!-- Contenido dinámico -->
      </div>
      
      <div class="modal-footer">
        <button id="verifyModalBtn" class="modal-btn primary">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="m9 12 2 2 4-4"></path>
            <path d="M21 12c-1 0-3-1-3-3s2-3 3-3 3 1 3 3-2 3-3 3"></path>
          </svg>
          Verificar Certificación
        </button>
        <button id="downloadBtn" class="modal-btn secondary">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
            <polyline points="7,10 12,15 17,10"></polyline>
            <line x1="12" y1="15" x2="12" y2="3"></line>
          </svg>
          Descargar PDF
        </button>
      </div>
    </div>
  </div>
</section>

<script src="../scripts/certifications.js"></script>

<style>
  /* Existing styles */
  .certifications-portfolio {
    min-height: 100vh;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .hero-section {
    padding: 6rem 0 4rem;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%);
    position: relative;
    overflow: hidden;
  }

  /* New styles for profile photo and tagline */
  .profile-container {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 1rem;
  }

  .profile-photo {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid #3b82f6;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }

  .hero-title {
    font-size: 2.5rem;
    font-weight: 800;
    color: #1f2937;
    margin-bottom: 0.5rem;
  }

  .text-gradient {
    background: linear-gradient(90deg, #3b82f6, #9333ea);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  .hero-description {
    font-size: 1.125rem;
    color: #4b5563;
    max-width: 600px;
    margin-bottom: 1rem;
  }

  .hero-tagline {
    font-size: 1rem;
    font-weight: 500;
    color: #6b7280;
    max-width: 600px;
    margin-bottom: 2rem;
    font-style: italic;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-top: 2rem;
  }

  .stat-card {
    background: white;
    padding: 1.5rem;
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: #3b82f6;
  }

  .stat-label {
    font-size: 0.875rem;
    color: #6b7280;
    text-transform: uppercase;
  }

  /* ... (rest of the existing styles) ... */
</style>
